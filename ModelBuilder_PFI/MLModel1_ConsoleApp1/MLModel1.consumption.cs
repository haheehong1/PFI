// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace MLModel1_ConsoleApp1
{
    public partial class MLModel1
    {
        /// <summary>
        /// model input class for MLModel1.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [ColumnName(@"WindowNumber")]
            public float WindowNumber { get; set; }

            [ColumnName(@"WindowAreaSum")]
            public float WindowAreaSum { get; set; }

            [ColumnName(@"WindowAreaAvg")]
            public float WindowAreaAvg { get; set; }

            [ColumnName(@"DistanceToWindowSum")]
            public float DistanceToWindowSum { get; set; }

            [ColumnName(@"DistanceToWindowAvg")]
            public float DistanceToWindowAvg { get; set; }

            [ColumnName(@"ViewVectorandWindowCenterAngleAvg")]
            public float ViewVectorandWindowCenterAngleAvg { get; set; }

            [ColumnName(@"RoomWidth")]
            public float RoomWidth { get; set; }

            [ColumnName(@"RoomHeight")]
            public float RoomHeight { get; set; }

            [ColumnName(@"RoomDepth")]
            public float RoomDepth { get; set; }

            [ColumnName(@"RoomVolume")]
            public float RoomVolume { get; set; }

            [ColumnName(@"WholeRoomVolume")]
            public float WholeRoomVolume { get; set; }

            [ColumnName(@"WindowToWallRatio")]
            public float WindowToWallRatio { get; set; }

            [ColumnName(@"VWindowDispersion")]
            public float VWindowDispersion { get; set; }

            [ColumnName(@"HWindowDispersion")]
            public float HWindowDispersion { get; set; }

            [ColumnName(@"WindowLengthSum")]
            public float WindowLengthSum { get; set; }

            [ColumnName(@"WindowLengthAvg")]
            public float WindowLengthAvg { get; set; }

            [ColumnName(@"WindowHeightSum")]
            public float WindowHeightSum { get; set; }

            [ColumnName(@"WindowHeightAvg")]
            public float WindowHeightAvg { get; set; }

            [ColumnName(@"AspectRatioAvg")]
            public float AspectRatioAvg { get; set; }

            [ColumnName(@"WindowHorizontalAngleSum")]
            public float WindowHorizontalAngleSum { get; set; }

            [ColumnName(@"WindowHorizontalAngleAvg")]
            public float WindowHorizontalAngleAvg { get; set; }

            [ColumnName(@"WindowVerticalAngleSum")]
            public float WindowVerticalAngleSum { get; set; }

            [ColumnName(@"WindowVerticalAngleAvg")]
            public float WindowVerticalAngleAvg { get; set; }

            [ColumnName(@"HViewAngle")]
            public float HViewAngle { get; set; }

            [ColumnName(@"VViewAngle")]
            public float VViewAngle { get; set; }

            [ColumnName(@"Z1PtsCount")]
            public float Z1PtsCount { get; set; }

            [ColumnName(@"Z2PtsCount")]
            public float Z2PtsCount { get; set; }

            [ColumnName(@"Z2PtsCountZ1PtsCount")]
            public float Z2PtsCountZ1PtsCount { get; set; }

            [ColumnName(@"Z3PtsCount")]
            public float Z3PtsCount { get; set; }

            [ColumnName(@"Z4PtsCount")]
            public float Z4PtsCount { get; set; }

            [ColumnName(@"Z1PtsCountRatio")]
            public float Z1PtsCountRatio { get; set; }

            [ColumnName(@"Z2PtCountRatio")]
            public float Z2PtCountRatio { get; set; }

            [ColumnName(@"Z2PtsCountZ1PtsCountRatio")]
            public float Z2PtsCountZ1PtsCountRatio { get; set; }

            [ColumnName(@"Z3PtsCountRatio")]
            public float Z3PtsCountRatio { get; set; }

            [ColumnName(@"Z4PtsCountRatio")]
            public float Z4PtsCountRatio { get; set; }

            [ColumnName(@"BuildingPtsCount")]
            public float BuildingPtsCount { get; set; }

            [ColumnName(@"EquipmentPtsCount")]
            public float EquipmentPtsCount { get; set; }

            [ColumnName(@"TreePtsCount")]
            public float TreePtsCount { get; set; }

            [ColumnName(@"PavementPtsCount")]
            public float PavementPtsCount { get; set; }

            [ColumnName(@"GrassPtsCount")]
            public float GrassPtsCount { get; set; }

            [ColumnName(@"WaterPtsCount")]
            public float WaterPtsCount { get; set; }

            [ColumnName(@"DynamicPtsCount")]
            public float DynamicPtsCount { get; set; }

            [ColumnName(@"TreePtsCountGrassPtsCount")]
            public float TreePtsCountGrassPtsCount { get; set; }

            [ColumnName(@"SkyPtsCount")]
            public float SkyPtsCount { get; set; }

            [ColumnName(@"BuildingPtsCountRatio")]
            public float BuildingPtsCountRatio { get; set; }

            [ColumnName(@"EquipmentPtsCountRatio")]
            public float EquipmentPtsCountRatio { get; set; }

            [ColumnName(@"TreePtsCountRatio")]
            public float TreePtsCountRatio { get; set; }

            [ColumnName(@"PavementPtsCountRatio")]
            public float PavementPtsCountRatio { get; set; }

            [ColumnName(@"GrassPtsCountRatio")]
            public float GrassPtsCountRatio { get; set; }

            [ColumnName(@"WaterPtsCountRatio")]
            public float WaterPtsCountRatio { get; set; }

            [ColumnName(@"DynamicPtsRatio")]
            public float DynamicPtsRatio { get; set; }

            [ColumnName(@"TreePtsCountGrassPtsCountRatio")]
            public float TreePtsCountGrassPtsCountRatio { get; set; }

            [ColumnName(@"SkyPtsCountRatio")]
            public float SkyPtsCountRatio { get; set; }

            [ColumnName(@"BuildingIsClosest")]
            public float BuildingIsClosest { get; set; }

            [ColumnName(@"EquipmentIsClosest")]
            public float EquipmentIsClosest { get; set; }

            [ColumnName(@"TreeIsClosest")]
            public float TreeIsClosest { get; set; }

            [ColumnName(@"DynamicIsClosest")]
            public float DynamicIsClosest { get; set; }

            [ColumnName(@"SkyIsClosest")]
            public float SkyIsClosest { get; set; }

            [ColumnName(@"ClosestObjectDist")]
            public float ClosestObjectDist { get; set; }

            [ColumnName(@"ElementNumber")]
            public float ElementNumber { get; set; }

            [ColumnName(@"FloorHeights")]
            public float FloorHeights { get; set; }

            [ColumnName(@"BuildingClosestDist")]
            public float BuildingClosestDist { get; set; }

            [ColumnName(@"EquipmentClosestDist")]
            public float EquipmentClosestDist { get; set; }

            [ColumnName(@"TreeClosestDist")]
            public float TreeClosestDist { get; set; }

            [ColumnName(@"GrassClosestDist")]
            public float GrassClosestDist { get; set; }

            [ColumnName(@"WaterClosestDist")]
            public float WaterClosestDist { get; set; }

            [ColumnName(@"NatureClosestDist")]
            public float NatureClosestDist { get; set; }

            [ColumnName(@"DynamicClosestDist")]
            public float DynamicClosestDist { get; set; }

            [ColumnName(@"SkyClosestDist")]
            public float SkyClosestDist { get; set; }

            [ColumnName(@"SkyCondition")]
            public float SkyCondition { get; set; }

            [ColumnName(@"ViewContent")]
            public float ViewContent { get; set; }

            [ColumnName(@"ViewAccess")]
            public float ViewAccess { get; set; }

            [ColumnName(@"Privacy")]
            public float Privacy { get; set; }

            [ColumnName(@"OverallRating")]
            public float OverallRating { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for MLModel1.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            public float Score { get; set; }
        }
        #endregion

        private static string MLNetModelPath = Path.GetFullPath("MLModel1.zip");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }
    }
}
